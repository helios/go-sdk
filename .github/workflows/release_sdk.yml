name: Release Go SDK

on:
    workflow_dispatch:

jobs:
    test:
        uses: ./.github/workflows/test.yml
        secrets:
            ACTIONS_GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}

    release:
        name: Release and Tag Go SDK
        runs-on: ubuntu-latest
        needs: [test]
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Get latest tag
              id: latest_tag
              uses: WyriHaximus/github-action-get-previous-tag@v1
              with:
                  path: ${{ github.event.inputs.packageName }}

            - name: Get current version
              id: current_version
              uses: michmich112/extract-version@main
              with:
                version-file: ./sdk/version.go
                schema: major.minor.build

            - name: Version check result
              if: steps.latest_tag.outputs.tag == steps.current_version.outputs.version
              uses: actions/github-script@v3
              with:
                  script: |
                      core.setFailed('Version is not updated')

            - name: Notify Slack
              if: ${{ success() }}
              uses: rtCamp/action-slack-notify@v2
              env:
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
                  SLACK_USERNAME: heliosphere-ci-bot
                  SLACK_TITLE: A new Go SDK version was successfully released!
                  SLACK_MESSAGE: Version ${{ steps.package-version.outputs.current-version }}
                  SLACK_COLOR: ${{ job.status }}

            - name: Push tag
              id: tag_version
              uses: mathieudutour/github-tag-action@v6.0
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  custom_tag: ${{ steps.current_version.outputs.version }}

            - name: Create a GitHub release
              uses: ncipollo/release-action@v1.9.0
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: ${{ steps.tag_version.outputs.new_tag }}
                  name: Release ${{ steps.tag_version.outputs.new_tag }}
                  body: ${{ steps.tag_version.outputs.changelog }}
                  generateReleaseNotes: true
